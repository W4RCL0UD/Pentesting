#!/bin/bash

#================================================================
#% SYNOPSIS
#%    ./subfinder.sh domain.com
#% 
#% PARAMS
#%    -all - all associated domains including external
#%
#% DESCRIPTION
#%    This script is used to harvest subdomains for a URL
#%
#% CREDITS
#%    @TheCyberMentor - Practical Ethical Hacking
#%    https://academy.tcm-sec.com/p/practical-ethical-hacking-the-complete-course
#%
#================================================================


url=$1
subs="-subs-only"
if [ $2 = '-all' ];then
	subs=""
fi
if [ ! -d "assets" ];then
	mkdir assets
fi
if [ ! -d "assets/$url" ];then
	mkdir assets/$url
fi
if [ ! -d 'assets/$url/gowitness' ];then
        mkdir assets/$url/gowitness
fi
if [ ! -d "assets/$url/scans" ];then
	mkdir assets/$url/scans
fi
if [ ! -d "assets/$url/httprobe" ];then
	mkdir assets/$url/httprobe
fi
if [ ! -d "assets/$url/potential_takeovers" ];then
	mkdir assets/$url/potential_takeovers
fi
if [ ! -d "assets/$url/wayback" ];then
	mkdir assets/$url/wayback
fi
if [ ! -d "assets/$url/wayback/params" ];then
	mkdir assets/$url/wayback/params
fi
if [ ! -d "assets/$url/wayback/extensions" ];then
	mkdir assets/$url/wayback/extensions
fi
if [ ! -f "assets/$url/httprobe/alive.txt" ];then
	touch assets/$url/httprobe/alive.txt
fi
if [ ! -f "assets/$url/$url.txt" ];then
	touch assets/$url/$url.txt
fi

echo "[+] Harvesting subdomains with assetfinder..."
assetfinder $subs $url >> assets/$url/assets.txt
echo "assetfinder $subs $url >> assets/$url/assets.txt"
cat assets/$url/assets.txt | grep $1 >> assets/$url/$url.txt
rm assets/$url/assets.txt

#echo "[+] Harvesting subdomains with Amass..."
#mass enum -d $url >> assets/$url/f.txt
#sort -u assets/$url/f.txt >> assets/$url/$url.txt
#rm assets/$url/f.txt

echo "[+] Probing for alive domains..."
cat assets/$url/$url.txt | sort -u | sed 's/https\?:\/\///' >> assets/$url/httprobe/alive.txt

echo "[+] Checking for possible subdomain takeover..."

if [ ! -f "assets/$url/potential_takeovers/potential_takeovers.txt" ];then
	touch assets/$url/potential_takeovers/potential_takeovers.txt
fi

subjack -w assets/$url/$url.txt -t 100 -timeout 30 -ssl -c $HOME/go/src/github.com/haccer/subjack/fingerprints.json -v 3 -o assets/$url/potential_takeovers/potential_takeovers.txt

echo "[+] Scanning for open ports..."
nmap -iL assets/$url/httprobe/alive.txt -T4 -oA assets/$url/scans/scanned.txt

echo "[+] Scraping wayback data..."
cat assets/$url/$url.txt | waybackurls >> assets/$url/wayback/wayback_output.txt
sort -u assets/$url/wayback/wayback_output.txt

echo "[+] Pulling and compiling all possible params found in wayback data..."
cat assets/$url/wayback/wayback_output.txt | grep '?*=' | cut -d '=' -f 1 | sort -u >> assets/$url/wayback/params/wayback_params.txt
for line in $(cat assets/$url/wayback/params/wayback_params.txt);do echo $line'=';done

echo "[+] Pulling and compiling js/php/aspx/jsp/json files from wayback output..."
for line in $(cat assets/$url/wayback/wayback_output.txt);do
	ext="${line##*.}"
	if [[ "$ext" == "js" ]]; then
		echo $line >> assets/$url/wayback/extensions/js1.txt
		sort -u assets/$url/wayback/extensions/js1.txt >> assets/$url/wayback/extensions/js.txt
		rm assets/$url/wayback/extensions/js1.txt
	fi
	if [[ "$ext" == "html" ]];then
		echo $line >> assets/$url/wayback/extensions/jsp1.txt
		sort -u assets/$url/wayback/extensions/jsp1.txt >> assets/$url/wayback/extensions/jsp.txt
		rm assets/$url/wayback/extensions/jsp1.txt
	fi
	if [[ "$ext" == "json" ]];then
		echo $line >> assets/$url/wayback/extensions/json1.txt
		sort -u assets/$url/wayback/extensions/json1.txt >> assets/$url/wayback/extensions/json.txt
		rm assets/$url/wayback/extensions/json1.txt
	fi
	if [[ "$ext" == "php" ]];then
		echo $line >> assets/$url/wayback/extensions/php1.txt
		sort -u assets/$url/wayback/extensions/php1.txt >> assets/$url/wayback/extensions/php.txt
		rm assets/$url/wayback/extensions/php1.txt
	fi
	if [[ "$ext" == "aspx" ]];then
		echo $line >> assets/$url/wayback/extensions/aspx1.txt
		sort -u assets/$url/wayback/extensions/aspx1.txt >> assets/$url/wayback/extensions/aspx.txt
		rm assets/$url/wayback/extensions/aspx1.txt
	fi
done

echo "[+] Running gowitness against all compiled domains..."
gowitness file -f assets/$url/httprobe/alive.txt -P assets/$url/gowitness
